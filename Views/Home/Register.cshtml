
@{
    ViewData["Title"] = "Register";
}

<h1>Register</h1>

<div class="row">
    <div class="col-3"></div>
    <div class="col-6">
        @*<form action="~/api/getdemo" method="post">*@
        @*上為用表單form設定去寄送資料*@
         <form id="form1">
            @*上為用formData的寫法*@
            <div class="mb-3">
                <label for="userName" class="form-label">User Name：</label>
                <input type="text" class="form-control" id="userName" name="Name">
                <button id="btnCheck" class="btn-sm btn-success my-2">檢查帳號是否存在</button>
                <div id="NameMesssage" class="alert alert-warning"></div>
            </div>
            <div class="mb-3">
                <label for="UserEmail" class="form-label">User Email：</label>
                <input type="email" class="form-control" id="UserEmail" name="Email">
            </div>
            <div class="mb-3">
                <label for="userAge" class="form-label">User Age：</label>
                <input type="number" class="form-control" id="userAge" name="Age">
            </div>
            <div class="mb-3">
                <label for="formFile" class="form-label">Photo：</label>
                <input class="form-control" type="file" id="formFile" name="file" style="display:none" multiple
                       accept="image/*">
                <a href="#" id="fileSelect">選擇圖片檔案</a>
                <div id="fileList">
                    <p>No files selected!</p>
                </div>
            </div>
            <button id="button1" type="submit" class="btn btn-primary">送出</button>
        </form>
        <div class="alert alert-info" id="div1"></div>
    </div>
    <div class="col-3">
        <a href="https://www.ispan.com.tw" id="a1">ispan</a>
    </div>
</div>


@section Styles{
    <style></style>
}

@section Scripts{
    <script>
        const btn = document.querySelector('#button1');
        const theA = document.querySelector('#a1')
        const txtName = document.querySelector('#userName')
        const txtAge = document.querySelector('#userAge')
        const theDiv = document.querySelector('#div1')
        const theTips = document.querySelector('#tips')

        const nameMesssage = document.querySelector('#NameMesssage')
        const btnCheck = document.querySelector('#btnCheck')


        //註冊"送出"按鈕
        btn.addEventListener('click', event => {
            //當按鈕btn被點擊click時

            event.preventDefault(); 
            //防止預設行為的發生


            //用formData的寫法，是傳統方法，下方有fetch寫法
            /*
            //步驟一建立Ajax物件: XMLHttpRequest
            const xhr = new XMLHttpRequest();

            //步驟二對伺服器發出要求(Request)
            xhr.open('POST', '@Url.Content("/api/Register")')
            //xhr.open('POST', '/api/register');
            //xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')
            //xhr.send(`name=${txtName.value}&age=${txtAge.value}`);

            //改用formData的寫法: 將整個form表單打包傳遞出去
            const formData = new FormData(document.querySelector('#form1'));
            xhr.send(formData);

            //步驟三接收伺服器回傳的資料
            xhr.addEventListener('load', () => {

                //步驟四讀資料
                const data = xhr.responseText;

                //步驟五顯示資料在網頁上
                theDiv.innerHTML = data;
            })
            */

        //用fetch的寫法，是最新的寫法
        const formData = new FormData(document.querySelector('#form1'));
            //用FormData將整個表單form1打包傳遞出去

        fetch('@Url.Content("/api/register")', {
            body: formData,
            method: 'POST'
                //改用 fetch 傳送POST資料formData到server端

        })
            .then(response => {
                if (response.ok) {
                    alert("新增成功")
                    //瀏覽器頁面跳出通知

                    location.href = '@Url.Content("/members")'
                    //用location.href來轉頁，實現頁面導向members.cshtml

                } else {
                    alert("有錯誤!!")
                    //瀏覽器頁面跳出通知
                }
            })

         })

        //前往ispn網頁
        theA.addEventListener('click', event => {
            //當連結theA被點擊click時

            if (!window.confirm("真的要去嗎??")) {
                //window.confirm會生成一個確定或取消的框框
                //若使用者選取消false則!false-->true則觸發下面程式碼

                event.preventDefault();
                //防止預設行為的發生
                //如果事件可以被取消，就取消事件（即取消事件的預設行為）
                //但不會影響事件的傳遞，事件仍會繼續傳遞。
            }
        })


        //作業三 檢查帳號是否存在:click事件
        btnCheck.addEventListener('click', event => {

            event.preventDefault();

            //步驟一建立Ajax物件: XMLHttpRequest
            const xhr = new XMLHttpRequest();

            //步驟二對伺服器發出要求(Request)
            xhr.open('POST', '/api/CheckAccount');

            //改用formData的寫法: 將整個form表單打包傳遞出去
            const formData = new FormData(document.querySelector('#form1'));
            xhr.send(formData);

            //步驟三接收伺服器回傳的資料
            xhr.addEventListener('load', () => {

                //步驟四讀資料
                const data = xhr.responseText;

                //步驟五顯示資料在網頁上
                nameMesssage.innerHTML = data;
            })

        })


        /*
        //作業三 檢查帳號是否存在:focus事件
        txtName.addEventListener('focus', event => {

            event.preventDefault();

            //步驟一建立Ajax物件: XMLHttpRequest
            const xhr = new XMLHttpRequest();

            //步驟二對伺服器發出要求(Request)
            xhr.open('POST', '/api/CheckAccount');

            //改用formData的寫法: 將整個form表單打包傳遞出去
            const formData = new FormData(document.querySelector('#form1'));
            xhr.send(formData);

            //步驟三接收伺服器回傳的資料
            xhr.addEventListener('load', () => {

                //步驟四讀資料
                const data = xhr.responseText;

                //步驟五顯示資料在網頁上
                nameMesssage.innerHTML = data;
            })

        })

        //作業三 檢查帳號是否存在:blur事件
        txtName.addEventListener('blur', event => {
            if (String.IsNullOrEmpty(nameMesssage)){
                nameMesssage.innerHTML = "";
            }
        });
        */

        //作業五 選擇圖片上傳時先進行預覽
        const fileSelect = document.getElementById("fileSelect"),
            fileElem = document.getElementById("formFile"),
            fileList = document.getElementById("fileList");
        fileSelect.addEventListener(
            "click",
            (e) => {
                if (fileElem) {
                    fileElem.click();
                }
                e.preventDefault(); // prevent navigation to "#"
            },
            false,
        );
        fileElem.addEventListener("change", handleFiles, false);
        function handleFiles() {
            if (!this.files.length) {
                fileList.innerHTML = "<p>No files selected!</p>";
            } else {
                fileList.innerHTML = "";
                const list = document.createElement("ul");
                fileList.appendChild(list);
                for (let i = 0; i < this.files.length; i++) {
                    const li = document.createElement("li");
                    list.appendChild(li);

                    const img = document.createElement("img");
                    img.src = URL.createObjectURL(this.files[i]);
                    img.height = 60;
                    img.onload = () => {
                        URL.revokeObjectURL(img.src);
                    };
                    li.appendChild(img);
                    const info = document.createElement("span");
                    info.innerHTML = `${this.files[i].name}: ${this.files[i].size} bytes`;
                    li.appendChild(info);
                }
            }
        }

    </script>
}
